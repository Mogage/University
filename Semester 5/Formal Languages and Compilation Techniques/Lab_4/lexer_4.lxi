%option noyywrap
%option yylineno

%{ 				
    #include <iostream>
    #include "parser.tab.hpp"
%} 

LID      [a-zA-Z_][a-zA-Z0-9_]*
LREAL    [-+]?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][-+]?[0-9]+)?|0[xX][0-9a-fA-F]+|[fFlL](16|32|64|128|bf16|F16|F32|F64|F128|BF16)
LINTEGER [-+]?[0-9]+(x|X)?([0-9]+|a|A|b|B|c|C|d|D|e|E|f|F)*((l|L|u|U)+(z|Z)*)?
WS       [ \t\r\n]

%%

"#"             { return HASH; }
"<<"            { return LEFT_SHIFT; }
">>"            { return RIGHT_SHIFT; }
"=="            { return EQUAL; }
"!="            { return NOT_EQUAL; }
"<"             { return LESS_THAN; }
">"             { return GREATER_THAN; }
"<="            { return LESS_THAN_OR_EQUAL; }
">="            { return GREATER_THAN_OR_EQUAL; }
"{"             { return LEFT_BRACE; }
"}"             { return RIGHT_BRACE; }
"("             { return LEFT_PAREN; }
")"             { return RIGHT_PAREN; }
";"             { return SEMICOLON; }
","             { return COMMA; }
"+"             { return PLUS; }
"-"             { return MINUS; }
"*"             { return MULTIPLY; }
"/"             { return DIVIDE; }
"%"             { return MODULO; }
"="             { return EQUAL; }
"++"            { return INCREMENT; }
"--"            { return DECREMENT; }
"cout"          { return COUT; }
"cin"           { return CIN; }
"return"        { return RETURN; }
"using"         { return USING; }
"namespace"     { return NAMESPACE; }
"std"           { return STD; }
"include"       { return INCLUDE; }
"iostream"      { return IOSTREAM; }
"math.h"        { return MATH_H; }
"string.h"      { return STRING_H; }
 
"const"         { return CONST_; }
"int"           { return INT; }
"float"         { return FLOAT; }
"double"        { return DOUBLE; }
"void"          { return VOID; }
"struct"        { return STRUCT; }
"const"         { return CONST; }
"if"            { return IF; }
"while"         { return WHILE; }
"for"           { return FOR; }
 
{LREAL}         { return CONST; }
{LINTEGER}      { return CONST; }
{LID}           { if(yyleng <= 8) return ID; std::cout << "Error at line " << yylineno << ". Length extended 8 characters.\n"; exit(1); }
{WS}+           ; 
.               { std::cout << "Error at line " << yylineno << ". Unexpected character: " << yytext << '\n'; exit(1); }

%%
