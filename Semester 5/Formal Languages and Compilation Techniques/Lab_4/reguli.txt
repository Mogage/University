program -> HASH INCLUDE LESS_THAN tip_include GREATER_THAN USING NAMESPACE STD SEMICOLON decl_globale
tip_include -> IOSTREAM | MATH_H | STRING_H
decl_globale -> tip_decl_globale decl_globale | tip_decl_globale
tip_decl_globale -> constanta | functie
constanta -> CONST_ tip atribuire SEMICOLON
functie -> tip ID LEFT_PAREN list_decl RIGHT_PAREN corp
tip -> INT | FLOAT | DOUBLE | VOID | tip_struct
tip_struct -> STRUCT ID LEFT_BRACE list_decl_struct RIGHT_BRACE
list_decl_struct -> list_decl SEMICOLON list_decl_struct | list_decl SEMICOLON
list_decl -> decl COMMA list_decl | decl | ;
decl -> tip atribuire | tip ID
corp -> LEFT_BRACE instr_corp RIGHT_BRACE | instr_return
instr_corp -> instr instr_corp | instr
instr -> lista_decl_instr | atribuire SEMICOLON | instr_if | instr_cicl | instr_return | instr_intrare | instr_iesire | apel_functie
lista_decl_instr -> tip decl_instr SEMICOLON | tip_struct SEMICOLON
decl_instr -> atribuire | ID
apel_functie -> ID LEFT_PAREN list_param RIGHT_PAREN
list_param -> expr_aritmetica COMMA list_param | expr_aritmetica
instr_if -> IF LEFT_PAREN cond RIGHT_PAREN corp
atribuire -> ID EQUAL expr_aritmetica | ID EQUAL apel_functie
expr_aritmetica -> expr_aritmetica op_aritmetica expr_aritmetica | ID INCREMENT | ID DECREMENT | ID | CONST
instr_intrare -> CIN list_intrari SEMICOLON
list_intrari -> RIGHT_SHIFT ID list_intrari | RIGHT_SHIFT ID
instr_cicl -> WHILE LEFT_PAREN cond RIGHT_PAREN corp | FOR LEFT_PAREN decl SEMICOLON cond SEMICOLON atribuire RIGHT_PAREN corp
cond -> ID | CONST | expr_aritmetica op_rel expr_aritmetica
instr_iesire -> COUT list_iesiri SEMICOLON
list_iesiri -> LEFT_SHIFT tip_iesire list_iesiri | LEFT_SHIFT tip_iesire
tip_iesire -> expr_aritmetica | apel_functie
op_rel -> NOT_EQUAL | EQUAL_EQUAL | GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL
op_aritmetica -> PLUS | MULTIPLY | DIVIDE | MODULO | MINUS
instr_return -> RETURN expr_aritmetica SEMICOLON